{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","indexOf","handleGoodSelect","name","setState","handleClearSelection","this","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"2OAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAcH,EAAMA,EAAMI,QAAQ,SAAWJ,EAAM,IAFvD,EAKEK,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAAEJ,aAAcG,KANlC,EASEE,qBAAuB,WACrB,EAAKD,SAAS,CAAEJ,aAAc,MAVlC,4CAaE,WAAU,IAAD,OACCA,EAAiBM,KAAKP,MAAtBC,aAER,OACE,uBAAMO,UAAU,oBAAhB,UAEE,qBAAIA,UAAU,sCAAd,UACGP,EAAY,UACNA,EADM,gBAET,oBAEHA,GAEC,wBACE,UAAQ,cACRQ,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,0BAKpB,uBAAOE,UAAU,QAAjB,SACE,gCACGV,EAAMa,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OAERJ,UACE,EAAKR,MAAMC,eAAiBW,EACxB,+BACA,GANR,UASE,+BACGA,IAASX,GACR,wBACE,UAAQ,YACRQ,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKP,iBAAiBS,IAJvC,eASDA,IAASX,GACR,wBACE,UAAQ,eACRQ,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKJ,qBAJhB,kBAWJ,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGI,MA/BEA,iBAxCrB,GAAyBC,aClBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.28a3a1f3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: goods[goods.indexOf('Jam')] || goods[0],\n  };\n\n  handleGoodSelect = (name: string) => {\n    this.setState({ selectedGood: name });\n  };\n\n  handleClearSelection = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n\n        <h1 className=\"title is-flex is-align-items-center\">\n          {selectedGood\n            ? `${selectedGood} is selected`\n            : 'No goods selected'}\n\n          {selectedGood && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.handleClearSelection}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={\n                  this.state.selectedGood === good\n                    ? 'has-background-success-light'\n                    : ''\n                }\n              >\n                <td>\n                  {good !== selectedGood && (\n                    <button\n                      data-cy=\"AddButton\"\n                      type=\"button\"\n                      className=\"button\"\n                      onClick={() => this.handleGoodSelect(good)}\n                    >\n                      +\n                    </button>\n                  )}\n                  {good === selectedGood && (\n                    <button\n                      data-cy=\"RemoveButton\"\n                      type=\"button\"\n                      className=\"button is-info\"\n                      onClick={this.handleClearSelection}\n                    >\n                      -\n                    </button>\n                  )}\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}